{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/chris/Documents/react/knockoutwhistreact/src/components/Hand.js\";\nimport { useState } from 'react'; //import { animateScroll } from \"react-scroll\";\n\nimport sock from '../services/socket';\nimport images from '../services/image-loader';\nimport image from '../assets/cards/s3.png';\nimport CardImage from './CardImage';\n\nrequire('../assets/cards/s2.png');\n\nconsole.log('here');\n\nconst getCardPicture = card => {\n  console.log(card);\n  let imagePath = `../assets/cards/${card}.png`;\n  return imagePath;\n};\n\nconst Hand = props => {\n  const playCard = async e => {\n    console.log('here is the id', e.target.id);\n    let payload = {\n      'type': 'play_card',\n      'card': e.target.id,\n      'client_id': props.userId,\n      'room_id': props.roomId\n    };\n    await sock.send(JSON.stringify(payload));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-container\",\n      children: props.hand.map((card, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: card,\n        onClick: playCard,\n        children: /*#__PURE__*/_jsxDEV(CardImage, {\n          id: card,\n          card: card,\n          userId: props.userId,\n          roomId: props.roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}; //src={require(getCardPicture(card))}\n\n\n_c = Hand;\nexport default Hand;\n\nvar _c;\n\n$RefreshReg$(_c, \"Hand\");","map":{"version":3,"sources":["/home/chris/Documents/react/knockoutwhistreact/src/components/Hand.js"],"names":["useState","sock","images","image","CardImage","require","console","log","getCardPicture","card","imagePath","Hand","props","playCard","e","target","id","payload","userId","roomId","send","JSON","stringify","hand","map","i"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB,C,CACA;;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEAC,OAAO,CAAC,wBAAD,CAAP;;AACAC,OAAO,CAACC,GAAR,CAAY,MAAZ;;AAIA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAC/BH,EAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACA,MAAIC,SAAS,GAAI,mBAAkBD,IAAK,MAAxC;AACA,SAAOC,SAAP;AACD,CAJD;;AAMA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEtB,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAAa;AAC5BR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BO,CAAC,CAACC,MAAF,CAASC,EAAvC;AACA,QAAIC,OAAO,GAAG;AACZ,cAAS,WADG;AAEZ,cAASH,CAAC,CAACC,MAAF,CAASC,EAFN;AAGZ,mBAAcJ,KAAK,CAACM,MAHR;AAIZ,iBAAYN,KAAK,CAACO;AAJN,KAAd;AAMA,UAAMlB,IAAI,CAACmB,IAAL,CAAUC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAV,CAAN;AACD,GATD;;AAWA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAEIL,KAAK,CAACW,IAAN,CAAWC,GAAX,CAAe,CAACf,IAAD,EAAMgB,CAAN,kBACb;AAAK,QAAA,EAAE,EAAEhB,IAAT;AAAuB,QAAA,OAAO,EAAEI,QAAhC;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,EAAE,EAAEJ,IADN;AAEE,UAAA,IAAI,EAAEA,IAFR;AAGE,UAAA,MAAM,EAAEG,KAAK,CAACM,MAHhB;AAIE,UAAA,MAAM,EAAEN,KAAK,CAACO;AAJhB;AAAA;AAAA;AAAA;AAAA;AADF,SAAoBM,CAApB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAkBD,CA/BD,C,CAgCA;;;KAhCMd,I;AAiCN,eAAeA,IAAf","sourcesContent":["import {useState} from 'react';\n//import { animateScroll } from \"react-scroll\";\nimport sock from '../services/socket';\nimport images from '../services/image-loader';\nimport image from '../assets/cards/s3.png';\nimport CardImage from './CardImage';\n\nrequire('../assets/cards/s2.png');\nconsole.log('here');\n\n\n\nconst getCardPicture = (card) => {\n  console.log(card);\n  let imagePath = `../assets/cards/${card}.png`;\n  return imagePath;\n};\n\nconst Hand = (props) => {\n\n  const playCard = async (e) => {\n    console.log('here is the id', e.target.id);\n    let payload = {\n      'type' : 'play_card',\n      'card' : e.target.id,\n      'client_id' : props.userId,\n      'room_id' : props.roomId\n    }\n    await sock.send(JSON.stringify(payload));\n  }\n\n  return (\n    <>\n      <div className=\"flex-container\">\n        {\n          props.hand.map((card,i) => (\n            <div id={card} key={i} onClick={playCard}>\n              <CardImage\n                id={card}\n                card={card}\n                userId={props.userId}\n                roomId={props.roomId}\n              />\n            </div>\n          ))\n        }\n      </div>\n    </>\n  );\n}\n//src={require(getCardPicture(card))}\nexport default Hand;\n"]},"metadata":{},"sourceType":"module"}