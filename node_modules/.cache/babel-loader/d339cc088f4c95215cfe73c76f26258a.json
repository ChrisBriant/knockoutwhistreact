{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chris/Documents/react/knockoutwhistreact/src/components/SendName.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport sock from '../services/socket';\n\nconst SendName = props => {\n  _s();\n\n  const [name, setName] = useState('');\n\n  const handleChange = e => {\n    let compareChar = /^[A-Za-z0-9/ ]*$/i;\n\n    if (e.target.value.match(compareChar)) {\n      setName(e.target.value);\n    } else {\n      console.log('Special Characters Not Allowed');\n    }\n  };\n\n  const handleSend = async () => {\n    let payload = {\n      'type': 'name',\n      'client_id': props.userId,\n      'name': name\n    };\n    console.log(payload);\n    await sock.send(JSON.stringify(payload));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-input\",\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Enter name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"name\",\n        type: \"text\",\n        value: name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"sendname\",\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SendName, \"17ovvp4+BQ/7zN2L0Q9MElPn7yM=\");\n\n_c = SendName;\nexport default SendName;\n\nvar _c;\n\n$RefreshReg$(_c, \"SendName\");","map":{"version":3,"sources":["/home/chris/Documents/react/knockoutwhistreact/src/components/SendName.js"],"names":["useState","sock","SendName","props","name","setName","handleChange","e","compareChar","target","value","match","console","log","handleSend","payload","userId","send","JSON","stringify"],"mappings":";;;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1B,QAAIC,WAAW,GAAG,mBAAlB;;AACA,QAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,KAAf,CAAqBH,WAArB,CAAH,EAAsC;AACpCH,MAAAA,OAAO,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AACD,KAFD,MAEO;AACLE,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AACF,GAPD;;AASA,QAAMC,UAAU,GAAG,YAAY;AAC7B,QAAIC,OAAO,GAAG;AACZ,cAAS,MADG;AAEZ,mBAAcZ,KAAK,CAACa,MAFR;AAGZ,cAASZ;AAHG,KAAd;AAKAQ,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACA,UAAMd,IAAI,CAACgB,IAAL,CAAUC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAAV,CAAN;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BACE;AAAA,6CACE;AAAO,QAAA,EAAE,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC,MAAtB;AAA6B,QAAA,KAAK,EAAEX,IAApC;AAA0C,QAAA,QAAQ,EAAEE;AAApD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,EAAE,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAEQ,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA9BD;;GAAMZ,Q;;KAAAA,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import {useState} from 'react';\nimport sock from '../services/socket';\n\nconst SendName = (props) => {\n  const [name,setName] = useState('');\n\n  const handleChange = (e) => {\n    let compareChar = /^[A-Za-z0-9/ ]*$/i;\n    if(e.target.value.match(compareChar)) {\n      setName(e.target.value);\n    } else {\n      console.log('Special Characters Not Allowed');\n    }\n  }\n\n  const handleSend = async () => {\n    let payload = {\n      'type' : 'name',\n      'client_id' : props.userId,\n      'name' : name\n    }\n    console.log(payload);\n    await sock.send(JSON.stringify(payload));\n  }\n\n  return (\n    <div className=\"inline-input\">\n      <label>Enter name:\n        <input id=\"name\" type=\"text\" value={name} onChange={handleChange} />\n        <button id=\"sendname\" onClick={handleSend}>Send</button>\n      </label>\n    </div>\n  );\n}\n\nexport default SendName;\n"]},"metadata":{},"sourceType":"module"}