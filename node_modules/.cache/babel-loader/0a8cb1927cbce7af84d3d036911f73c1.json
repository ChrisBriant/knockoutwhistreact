{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/chris/Documents/react/knockoutwhistreact/src/components/Room.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; //import { animateScroll } from \"react-scroll\";\n\nimport sock from '../services/socket';\n\nconst Room = props => {\n  _s();\n\n  console.log(props); // useEffect( ()=> {\n  //   console.log('Using room effect');\n  //   animateScroll.scrollToBottom({\n  //     containerId: \"chatmessage\"\n  //   });\n  // }, props.roomMessages.length);\n  //const contentEditable = useRef('');\n\n  const [message, setMessage] = useState('');\n  const [pm, setPm] = useState(null);\n\n  const exitRoom = async () => {\n    let payload = {\n      'type': 'exit_room',\n      'client_id': props.userId,\n      'name': props.roomName\n    };\n    await sock.send(JSON.stringify(payload));\n  };\n\n  const handleEditMessage = async e => {\n    console.log('text ', e.target.value);\n    setMessage(e.target.value);\n  };\n\n  const sendRoomMessage = async () => {\n    let payload = {\n      'type': 'message_room',\n      'client_id': props.userId,\n      'name': props.roomName,\n      'message': message\n    };\n    await sock.send(JSON.stringify(payload));\n  };\n\n  const sendMessage = async e => {\n    //Check for the '@' symbol with a username\n    let sendingPm = message.search(/@([^].)\\w+/i);\n\n    if (sendingPm == 0) {\n      console.log('Sending private message'); //Get the user and check exists\n\n      let person = message.split(':')[0].split('@')[1];\n      let personMember = props.otherMembers.filter(m => m.name === person);\n\n      if (personMember.length > 0) {\n        console.log('Person Exists', personMember);\n        let payload = {\n          'type': 'room_pm',\n          'client_id': personMember[0].id,\n          'message': message,\n          'sender': props.name\n        };\n        console.log('SENDING', payload);\n        await sock.send(JSON.stringify(payload)); //Clear message\n\n        setMessage('');\n      } else {\n        console.log('Person does not exist');\n        sendRoomMessage();\n        setMessage('');\n      }\n    } else {\n      console.log('Sending room message');\n      sendRoomMessage();\n      setMessage('');\n    }\n  };\n\n  const pmMember = async member => {\n    console.log('send a private message', member);\n    setMessage(`@${member.name}: `);\n    setPm(member);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You are in \", props.roomName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Also in the room:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), props.otherMembers.map((member, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n        id: member.id,\n        onClick: () => pmMember(member),\n        children: member.name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"messages\",\n      className: \"message-div\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.roomMessages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: msg.class,\n          children: msg.msg\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"chatmessage\",\n      onChange: handleEditMessage,\n      value: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"send-message\",\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"exit\",\n        onClick: exitRoom,\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Room, \"EYD6t6dJqPqw4rd1PROl8qd8lLc=\");\n\n_c = Room;\nexport default Room; //REMOVE for now\n//<div className=\"editable-div\" contentEditable=\"true\" onChange={handleEditMessage}></div>\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/home/chris/Documents/react/knockoutwhistreact/src/components/Room.js"],"names":["useState","sock","Room","props","console","log","message","setMessage","pm","setPm","exitRoom","payload","userId","roomName","send","JSON","stringify","handleEditMessage","e","target","value","sendRoomMessage","sendMessage","sendingPm","search","person","split","personMember","otherMembers","filter","m","name","length","id","pmMember","member","map","i","roomMessages","msg","class"],"mappings":"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","sourcesContent":["import {useState} from 'react';\n//import { animateScroll } from \"react-scroll\";\nimport sock from '../services/socket';\n\nconst Room = (props) => {\n  console.log(props);\n\n  // useEffect( ()=> {\n  //   console.log('Using room effect');\n  //   animateScroll.scrollToBottom({\n  //     containerId: \"chatmessage\"\n  //   });\n  // }, props.roomMessages.length);\n\n  //const contentEditable = useRef('');\n  const [message,setMessage] = useState('');\n  const [pm,setPm] = useState(null);\n\n  const exitRoom = async () => {\n    let payload = {\n      'type' : 'exit_room',\n      'client_id' : props.userId,\n      'name' : props.roomName\n    }\n    await sock.send(JSON.stringify(payload));\n  }\n\n  const handleEditMessage = async (e) => {\n    console.log('text ', e.target.value);\n    setMessage(e.target.value);\n  }\n\n  const sendRoomMessage = async () => {\n    let payload = {\n      'type' : 'message_room',\n      'client_id' : props.userId,\n      'name' : props.roomName,\n      'message' : message\n    }\n    await sock.send(JSON.stringify(payload));\n  }\n\n\n  const sendMessage = async (e) => {\n    //Check for the '@' symbol with a username\n    let sendingPm = message.search(/@([^].)\\w+/i);\n    if (sendingPm == 0) {\n      console.log('Sending private message')\n      //Get the user and check exists\n      let person = message.split(':')[0].split('@')[1]\n      let personMember = props.otherMembers.filter((m) => (m.name === person));\n      if(personMember.length > 0) {\n        console.log('Person Exists',personMember);\n        let payload = {\n          'type' : 'room_pm',\n          'client_id' : personMember[0].id,\n          'message' : message,\n          'sender' : props.name\n        }\n        console.log('SENDING', payload);\n        await sock.send(JSON.stringify(payload));\n        //Clear message\n        setMessage('');\n      } else {\n        console.log('Person does not exist');\n        sendRoomMessage();\n        setMessage('');\n      }\n    } else {\n      console.log('Sending room message');\n      sendRoomMessage();\n      setMessage('');\n    }\n\n\n  }\n\n  const pmMember = async (member) => {\n    console.log('send a private message',member);\n    setMessage(`@${member.name}: `);\n    setPm(member);\n  }\n\n  return (\n    <>\n      <p>You are in {props.roomName}</p>\n      <div>\n        <p>Also in the room:</p>\n        {\n          props.otherMembers.map((member,i) => (\n            <button id={member.id} key={i} onClick={() => pmMember(member)}>{member.name}</button>\n          ))\n        }\n      </div>\n      <div id=\"messages\" className=\"message-div\">\n        <ul>\n          {\n            props.roomMessages.map((msg,i) => (\n              <li key={i} className={msg.class}>{msg.msg}</li>\n            ))\n          }\n        </ul>\n      </div>\n      <textarea\n        id=\"chatmessage\"\n        onChange={handleEditMessage}\n        value={message}\n      />\n      <button id=\"send-message\" onClick={sendMessage}>Send</button>\n      <div>\n        <button id=\"exit\" onClick={exitRoom}>Exit</button>\n      </div>\n    </>\n  );\n}\n\nexport default Room;\n\n//REMOVE for now\n//<div className=\"editable-div\" contentEditable=\"true\" onChange={handleEditMessage}></div>\n"]},"metadata":{},"sourceType":"module"}