[{"/home/chris/Documents/react/knockoutwhistreact/src/index.js":"1","/home/chris/Documents/react/knockoutwhistreact/src/App.js":"2","/home/chris/Documents/react/knockoutwhistreact/src/reportWebVitals.js":"3","/home/chris/Documents/react/knockoutwhistreact/src/components/TestConnect.js":"4","/home/chris/Documents/react/knockoutwhistreact/src/components/SendName.js":"5","/home/chris/Documents/react/knockoutwhistreact/src/components/Rooms.js":"6","/home/chris/Documents/react/knockoutwhistreact/src/components/Room.js":"7","/home/chris/Documents/react/knockoutwhistreact/src/components/Users.js":"8","/home/chris/Documents/react/knockoutwhistreact/src/services/socket.js":"9","/home/chris/Documents/react/knockoutwhistreact/src/components/Hand.js":"10","/home/chris/Documents/react/knockoutwhistreact/src/services/image-loader.js":"11","/home/chris/Documents/react/knockoutwhistreact/src/components/CardImage.js":"12","/home/chris/Documents/react/knockoutwhistreact/src/components/Table.js":"13","/home/chris/Documents/react/knockoutwhistreact/src/components/Tricks.js":"14","/home/chris/Documents/react/knockoutwhistreact/src/components/PlayerBox.js":"15","/home/chris/Documents/react/knockoutwhistreact/src/components/RoundResults.js":"16","/home/chris/Documents/react/knockoutwhistreact/src/components/GameOver.js":"17","/home/chris/Documents/react/knockoutwhistreact/src/services/suithelper.js":"18"},{"size":500,"mtime":1611039083000,"results":"19","hashOfConfig":"20"},{"size":338,"mtime":1611292363000,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611039083000,"results":"22","hashOfConfig":"20"},{"size":14319,"mtime":1612940730277,"results":"23","hashOfConfig":"20"},{"size":856,"mtime":1611641018000,"results":"24","hashOfConfig":"20"},{"size":1419,"mtime":1611640981000,"results":"25","hashOfConfig":"20"},{"size":6406,"mtime":1612853768797,"results":"26","hashOfConfig":"20"},{"size":507,"mtime":1611404422000,"results":"27","hashOfConfig":"20"},{"size":151,"mtime":1611814462683,"results":"28","hashOfConfig":"20"},{"size":3061,"mtime":1612854468424,"results":"29","hashOfConfig":"20"},{"size":635,"mtime":1611989802621,"results":"30","hashOfConfig":"20"},{"size":5160,"mtime":1612696934333,"results":"31","hashOfConfig":"20"},{"size":4513,"mtime":1612699160399,"results":"32","hashOfConfig":"20"},{"size":626,"mtime":1612241714774,"results":"33","hashOfConfig":"20"},{"size":280,"mtime":1612159983946,"results":"34","hashOfConfig":"20"},{"size":337,"mtime":1612332509082,"results":"35","hashOfConfig":"20"},{"size":1210,"mtime":1612853851017,"results":"36","hashOfConfig":"20"},{"size":309,"mtime":1612678296944,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"n6cf1y",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/home/chris/Documents/react/knockoutwhistreact/src/index.js",[],["82","83"],"/home/chris/Documents/react/knockoutwhistreact/src/App.js",["84"],"import logo from './logo.svg';\nimport './App.css';\nimport TestConnect from './components/TestConnect.js';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <TestConnect />\n      </header>\n      <main>\n\n      </main>\n      <footer>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","/home/chris/Documents/react/knockoutwhistreact/src/reportWebVitals.js",[],"/home/chris/Documents/react/knockoutwhistreact/src/components/TestConnect.js",["85","86"],"/home/chris/Documents/react/knockoutwhistreact/src/components/SendName.js",[],"/home/chris/Documents/react/knockoutwhistreact/src/components/Rooms.js",[],"/home/chris/Documents/react/knockoutwhistreact/src/components/Room.js",["87","88","89","90"],"import {useState} from 'react';\nimport Hand from './Hand';\nimport Table from './Table';\nimport Tricks from './Tricks';\nimport sock from '../services/socket';\nimport PlayerBox from './PlayerBox';\nimport RoundResults from './RoundResults';\nimport GameOver from './GameOver';\n\n\n\nconst Room = (props) => {\n  console.log('ROOM PROPS',props);\n\n  const [message,setMessage] = useState('');\n  const [pm,setPm] = useState(null);\n\n  const exitRoom = async () => {\n    let payload = {\n      'type' : 'exit_room',\n      'client_id' : props.userId,\n      'name' : props.roomName\n    }\n    await sock.send(JSON.stringify(payload));\n  }\n\n  const startGame = async () => {\n    let payload = {\n      'type' : 'start_game',\n      'name' : props.roomName\n    }\n    await sock.send(JSON.stringify(payload));\n  }\n\n  // const handleEditMessage = async (e) => {\n  //   console.log('text ', e.target.value);\n  //   setMessage(e.target.value);\n  // }\n  //\n  // const sendRoomMessage = async () => {\n  //   let payload = {\n  //     'type' : 'message_room',\n  //     'client_id' : props.userId,\n  //     'name' : props.roomName,\n  //     'message' : message\n  //   }\n  //   await sock.send(JSON.stringify(payload));\n  // }\n  //\n  //\n  // const sendMessage = async (e) => {\n  //   //Check for the '@' symbol with a username\n  //   let sendingPm = message.search(/@([^].)\\w+/i);\n  //   if (sendingPm == 0) {\n  //     console.log('Sending private message')\n  //     //Get the user and check exists\n  //     let person = message.split(':')[0].split('@')[1]\n  //     let personMember = props.otherMembers.filter((m) => (m.name === person));\n  //     if(personMember.length > 0) {\n  //       console.log('Person Exists',personMember);\n  //       let payload = {\n  //         'type' : 'room_pm',\n  //         'client_id' : personMember[0].id,\n  //         'message' : message,\n  //         'sender' : props.name\n  //       }\n  //       console.log('SENDING', payload);\n  //       await sock.send(JSON.stringify(payload));\n  //       //Clear message\n  //       setMessage('');\n  //     } else {\n  //       console.log('Person does not exist');\n  //       sendRoomMessage();\n  //       setMessage('');\n  //     }\n  //   } else {\n  //     console.log('Sending room message');\n  //     sendRoomMessage();\n  //     setMessage('');\n  //   }\n  //\n  //\n  // }\n  //\n  // const pmMember = async (member) => {\n  //   console.log('send a private message',member);\n  //   setMessage(`@${member.name}: `);\n  //   setPm(member);\n  // }\n\n  return (\n    <>\n      <div className=\"gameMain\">\n        { props.otherMembers.length > 0\n          ?\n            <>\n              {\n                !props.gameInProgress\n                ?\n                  <>\n                    <p>You are in {props.roomName}</p>\n                    <PlayerBox\n                      otherMembers={props.otherMembers}\n                      startPlayer={props.startPlayer}\n                    />\n                    <div>\n                      <button id=\"startgame-btn\" onClick={startGame}>Start Game</button>\n                    </div>\n                  </>\n                :\n                  <>\n                    { (props.winner && !props.tieBreaker) || props.winAsKnockout || props.knockout\n                      ?\n                        <>\n                          <GameOver\n                            userId = {props.userId}\n                            winner = {props.winner}\n                            knockout = {props.knockout}\n                          />\n                        </>\n                      :\n                        <>\n                        <div className=\"flex-container\">\n                          <div className=\"statsPanel\">\n                            <PlayerBox\n                              otherMembers={props.otherMembers}\n                              startPlayer={props.startPlayer}\n                            />\n                            <Tricks\n                              userId = {props.userId}\n                              completedTricks={props.completedTricks}\n                              roundNumber={props.roundNumber}\n                            />\n                            <RoundResults\n                              roundResults = {props.roundResults}\n                            />\n                          </div>\n                          <div className=\"playArea\">\n                            <Table\n                              userId={props.userId}\n                              roomId={props.roomName}\n                              trump={props.trump}\n                              trick={props.trick}\n                              tieBreaker={props.tieBreaker}\n                              ties={props.ties}\n                              tieBreakId={props.tieBreakId}\n                              tieBreakerDeck={props.tieBreakerDeck}\n                              tieBreakWinner={props.tieBreakWinner}\n                              tieStartPlayer={props.tieStartPlayer}\n                            />\n                            {\n                              props.userId === props.startPlayer ?\n                              <p id=\"firstgo\">Your turn, pick a card!</p> :\n                              <p></p>\n                            }\n                            {\n                              !props.tieBreaker\n                              ?\n                                <Hand\n                                  hand = {props.hand}\n                                  userId = {props.userId}\n                                  roomId = {props.roomName}\n                                  startRound={props.startRound}\n                                  startPlayer={props.startPlayer}\n                                  trick={props.trick}\n                                />\n                              : null\n                            }\n                          </div>\n                        </div>\n                      </>\n                    }\n                  </>\n              }\n            </>\n          :\n            <>\n              <div>\n                <p>Waiting for others to join</p>\n              </div>\n            </>\n        }\n      </div>\n\n      <div>\n        <button id=\"exit\" onClick={exitRoom}>Exit</button>\n      </div>\n    </>\n  );\n}\n\nexport default Room;\n\n//REMOVE for now\n//<div className=\"editable-div\" contentEditable=\"true\" onChange={handleEditMessage}></div>\n","/home/chris/Documents/react/knockoutwhistreact/src/components/Users.js",[],"/home/chris/Documents/react/knockoutwhistreact/src/services/socket.js",[],"/home/chris/Documents/react/knockoutwhistreact/src/components/Hand.js",["91","92","93"],"import {useState} from 'react';\n//import { animateScroll } from \"react-scroll\";\nimport sock from '../services/socket';\nimport images from '../services/image-loader';\nimport image from '../assets/cards/s3.png';\nimport CardImage from './CardImage';\nimport getSuitName from '../services/suithelper';\n\nrequire('../assets/cards/s2.png');\nconsole.log('here');\n\n\n\nconst getCardPicture = (card) => {\n  console.log(card);\n  let imagePath = `../assets/cards/${card}.png`;\n  return imagePath;\n};\n\nconst Hand = (props) => {\n  let pickTrump;\n  let myTurn;\n\n  const [message,setMessage] = useState('');\n\n  if(props.startRound && props.startPlayer === props.userId )\n  {\n    pickTrump = true;\n  } else {\n    pickTrump = false;\n  }\n\n  if(props.startPlayer === props.userId) {\n    myTurn = true;\n  } else {\n    myTurn = false;\n  }\n\n  //Check that the card selected is following the follow suit role\n  const isCardValid = (card) => {\n    if(props.trick.length < 1) {\n      return true;\n    } else {\n      let suitPlayed = card.charAt(0);\n      let suitOfTrick = props.trick[0].card.charAt(0);\n      let suitsInHand = [];\n\n      if(suitPlayed === suitOfTrick){\n        return true;\n      } else {\n        for(let i=0;i<props.hand.length;i++) {\n          console.log(props.hand[i]);\n          suitsInHand.push(props.hand[i].charAt(0));\n        }\n\n        //Logic for follow suit\n        console.log('FOLLOW SUIT', suitsInHand, suitPlayed);\n        if(!suitsInHand.includes(suitOfTrick)) {\n          return true;\n        } else {\n          setMessage(`Your selection must folow suit, the suit is ${getSuitName(suitOfTrick)}`);\n          return false;\n        }\n      }\n    }\n  }\n\n\n  const playCard = async (e) => {\n    if(myTurn) {\n      console.log('here is the id', isCardValid(e.target.id));\n      if(isCardValid(e.target.id)) {\n        //Reset the message\n        setMessage('');\n        let payload = {\n          'type' : 'play_card',\n          'card' : e.target.id,\n          'client_id' : props.userId,\n          'room_id' : props.roomId\n        }\n        await sock.send(JSON.stringify(payload));\n      }\n    }\n  }\n\n  const handlePickTrump = async (e) => {\n    let payload = {\n      'type' : 'pick_trump',\n      'card' : e.target.id,\n      'client_id' : props.userId,\n      'room_id' : props.roomId\n    }\n    await sock.send(JSON.stringify(payload));\n  }\n\n  return (\n    <>\n      { pickTrump\n        ? <p>Congratulations you won the round! Please pick a trump card.</p>\n        : null\n      }\n      <div className=\"flex-container\">\n        {\n          props.hand.map((card,i) => (\n            <div id={card} key={i} onClick={pickTrump ? handlePickTrump : playCard}>\n              <CardImage\n                id={card}\n                card={card}\n                userId={props.userId}\n                roomId={props.roomId}\n                myTurn={myTurn}\n              />\n            </div>\n          ))\n        }\n      </div>\n      <div>\n        <p className=\"errorMessage\">{message}</p>\n      </div>\n    </>\n  );\n}\n//src={require(getCardPicture(card))}\nexport default Hand;\n","/home/chris/Documents/react/knockoutwhistreact/src/services/image-loader.js",["94","95"],"let images = [];\n\nfunction getCard(val) {\n  if(val + 2 < 11) {\n    return (val + 2).toString();\n  } else {\n    switch(val + 2) {\n      case 11:\n        return 'J';\n      case 12:\n        return 'Q';\n      case 13:\n        return 'K';\n      case 14:\n        return 'A';\n    }\n  }\n}\n\n\nfunction getSuit(val) {\n  switch (val) {\n    case 0:\n      return 's';\n    case 1:\n      return 'd';\n    case 2:\n      return 'c';\n    case 3:\n      return 'h';\n  }\n}\n\nfor(let i=0;i<4;i++) {\n  for(let j=0;j<13;j++) {\n    images.push(`../assets/cards/${getSuit(i)}${getCard(j)}.png`);\n  }\n}\n\nconsole.log(JSON.stringify(images));\n\nexport default images;\n","/home/chris/Documents/react/knockoutwhistreact/src/components/CardImage.js",["96","97"],"import sock from '../services/socket';\nimport s2 from \"../assets/cards/s2.png\";\nimport s3 from \"../assets/cards/s3.png\";\nimport s4 from \"../assets/cards/s4.png\";\nimport s5 from \"../assets/cards/s5.png\";\nimport s6 from \"../assets/cards/s6.png\";\nimport s7 from \"../assets/cards/s7.png\";\nimport s8 from \"../assets/cards/s8.png\";\nimport s9 from \"../assets/cards/s9.png\";\nimport s10 from \"../assets/cards/s10.png\";\nimport sJ from \"../assets/cards/sJ.png\";\nimport sQ from \"../assets/cards/sQ.png\";\nimport sK from \"../assets/cards/sK.png\";\nimport sA from \"../assets/cards/sA.png\";\nimport d2 from \"../assets/cards/d2.png\";\nimport d3 from \"../assets/cards/d3.png\";\nimport d4 from \"../assets/cards/d4.png\";\nimport d5 from \"../assets/cards/d5.png\";\nimport d6 from \"../assets/cards/d6.png\";\nimport d7 from \"../assets/cards/d7.png\";\nimport d8 from \"../assets/cards/d8.png\";\nimport d9 from \"../assets/cards/d9.png\";\nimport d10 from \"../assets/cards/d10.png\";\nimport dJ from \"../assets/cards/dJ.png\";\nimport dQ from \"../assets/cards/dQ.png\";\nimport dK from \"../assets/cards/dK.png\";\nimport dA from \"../assets/cards/dA.png\";\nimport c2 from \"../assets/cards/c2.png\";\nimport c3 from \"../assets/cards/c3.png\";\nimport c4 from \"../assets/cards/c4.png\";\nimport c5 from \"../assets/cards/c5.png\";\nimport c6 from \"../assets/cards/c6.png\";\nimport c7 from \"../assets/cards/c7.png\";\nimport c8 from \"../assets/cards/c8.png\";\nimport c9 from \"../assets/cards/c9.png\";\nimport c10 from \"../assets/cards/c10.png\";\nimport cJ from \"../assets/cards/cJ.png\";\nimport cQ from \"../assets/cards/cQ.png\";\nimport cK from \"../assets/cards/cK.png\";\nimport cA from \"../assets/cards/cA.png\";\nimport h2 from \"../assets/cards/h2.png\";\nimport h3 from \"../assets/cards/h3.png\";\nimport h4 from \"../assets/cards/h4.png\";\nimport h5 from \"../assets/cards/h5.png\";\nimport h6 from \"../assets/cards/h6.png\";\nimport h7 from \"../assets/cards/h7.png\";\nimport h8 from \"../assets/cards/h8.png\";\nimport h9 from \"../assets/cards/h9.png\";\nimport h10 from \"../assets/cards/h10.png\";\nimport hJ from \"../assets/cards/hJ.png\";\nimport hQ from \"../assets/cards/hQ.png\";\nimport hK from \"../assets/cards/hK.png\";\nimport hA from \"../assets/cards/hA.png\";\nimport hearts from \"../assets/cards/hearts.png\";\nimport diamonds from \"../assets/cards/diamonds.png\";\nimport clubs from \"../assets/cards/clubs.png\";\nimport spades from \"../assets/cards/spades.png\";\n\nconst CardImage = (props) => {\n  let cardClass;\n  let cardImgClass;\n\n  const getCard = () => {\n    switch(props.card) {\n      case 's2':\n        return s2;\n      case 's3':\n        return s3;\n      case 's4':\n        return s4;\n      case 's5':\n        return s5;\n      case 's6':\n        return s6;\n      case 's7':\n        return s7;\n      case 's8':\n        return s8;\n      case 's9':\n        return s9;\n      case 's10':\n        return s10;\n      case 'sJ':\n        return sJ;\n      case 'sQ':\n        return sQ;\n      case 'sK':\n        return sK;\n      case 'sA':\n        return sA;\n      case 'd2':\n        return d2;\n      case 'd3':\n        return d3;\n      case 'd4':\n        return d4;\n      case 'd5':\n        return d5;\n      case 'd6':\n        return d6;\n      case 'd7':\n        return d7;\n      case 'd8':\n        return d8;\n      case 'd9':\n        return d9;\n      case 'd10':\n        return d10;\n      case 'dJ':\n        return dJ;\n      case 'dQ':\n        return dQ;\n      case 'dK':\n        return dK;\n      case 'dA':\n        return dA;\n      case 'c2':\n        return c2;\n      case 'c3':\n        return c3;\n      case 'c4':\n        return c4;\n      case 'c5':\n        return c5;\n      case 'c6':\n        return c6;\n      case 'c7':\n        return c7;\n      case 'c8':\n        return c8;\n      case 'c9':\n        return c9;\n      case 'c10':\n        return c10;\n      case 'cJ':\n        return cJ;\n      case 'cQ':\n        return cQ;\n      case 'cK':\n        return cK;\n      case 'cA':\n        return cA;\n      case 'h2':\n        return h2;\n      case 'h3':\n        return h3;\n      case 'h4':\n        return h4;\n      case 'h5':\n        return h5;\n      case 'h6':\n        return h6;\n      case 'h7':\n        return h7;\n      case 'h8':\n        return h8;\n      case 'h9':\n        return h9;\n      case 'h10':\n        return h10;\n      case 'hJ':\n        return hJ;\n      case 'hQ':\n        return hQ;\n      case 'hK':\n        return hK;\n      case 'hA':\n        return hA;\n      case 'h':\n        return hearts;\n      case 'c':\n        return clubs;\n      case 'd':\n        return diamonds;\n      case 's':\n        return spades;\n    }\n  }\n\n  if(props.myTurn) {\n    cardClass = 'cardfront';\n    cardImgClass = 'cardfront-img';\n  } else {\n    cardClass = 'cardfront-static';\n    cardImgClass = 'cardfront-img-static';\n  }\n\n  // const playCard = async (e) => {\n  //   let payload = {\n  //     'type' : 'play_card',\n  //     'card' : props.card,\n  //     'client_id' : props.userId,\n  //     'room_id' : props.roomId\n  //   }\n  //   await sock.send(JSON.stringify(payload));\n  // }\n\n  return (\n    <div className={cardClass}>\n      <img className={cardImgClass} id={props.card} src={getCard()} alt={props.card}/>\n    </div>\n  );\n}\n\nexport default CardImage;\n","/home/chris/Documents/react/knockoutwhistreact/src/components/Table.js",["98"],"//The area where the cards are played to\nimport {useState} from 'react';\nimport CardImage from './CardImage';\nimport cardBack from \"../assets/cards/playing-card-back.jpg\";\nimport sock from '../services/socket';\n\n//// TODO: Create a key display component to give tie breaker info as below\n// if suit == 'h':\n//     return 1\n// elif suit == 's':\n//     return 2\n// elif suit == 'd':\n//     return 3\n// elif suit == 'c':\n//     return 4\n\nconst Table = (props) => {\n  console.log('Trick is',props.trick)\n  let tieFirstPlayer;\n  let imageBackClass;\n  let included;\n  let tieBreakWon;\n  let tieBreakWinner;\n\n  const [chosenCard,setChosen] = useState(null);\n\n  if(props.userId === props.tieStartPlayer) {\n    tieFirstPlayer = true;\n    imageBackClass = 'image-back-large-clickable';\n  } else {\n    tieFirstPlayer = false;\n    imageBackClass = 'image-back-large';\n  }\n\n  if(props.ties.includes(props.userId)) {\n    included = true;\n  } else {\n    included = false;\n  }\n\n  if(props.tieBreakWinner) {\n    tieBreakWon = true;\n    if(props.tieBreakWinner.client_id === props.userId) {\n      tieBreakWinner = true;\n    } else {\n      tieBreakWinner = false;\n    }\n  } else {\n    tieBreakWon = false;\n  }\n\n\n\n  const pickTieBreak = async (tieFirstPlayer) => {\n    if(tieFirstPlayer) {\n      console.log('I am first', tieFirstPlayer);\n      //Get a random card from the deck\n      let card = props.tieBreakerDeck[Math.floor(Math.random() * props.tieBreakerDeck.length)];\n      setChosen(card);\n      console.log('I am first', card);\n      let payload = {\n        'type' : 'tie_breaker_choice',\n        'card' : card,\n        'client_id' : props.userId,\n        'room_id' : props.roomId,\n        'ties' : props.ties,\n        'tie_break_id' : props.tieBreakId\n      }\n      await sock.send(JSON.stringify(payload));\n    }\n  }\n\n  const endTieBreak = async () => {\n    let payload = {\n      'type' : 'end_tie_break',\n      'client_id' : props.tieBreakWinner.client_id,\n      'room_id' : props.roomId,\n      'tie_break_id' : props.tieBreakId\n    }\n    console.log('HERE IS THE PAYLOAD',payload);\n    await sock.send(JSON.stringify(payload));\n  }\n\n  return (\n      <>\n        {\n          !props.tieBreaker\n          ?\n            <>\n              <div className=\"flex-container\">\n                <div>\n                  <p>Trump</p>\n                  <CardImage card={props.trump} />\n                </div>\n                <div id=\"played-cards\">\n                  <p>Played Cards</p>\n                  <div className=\"flex-container\">\n                    {\n                      props.trick.map( (card,i) => (\n                        <div id=\"latestintrick\" class={props.trick[0].card} key={i}>\n                          <CardImage card={card.card} />\n                        </div>\n                      ))\n                    }\n                  </div>\n                </div>\n              </div>\n            </>\n          :\n            <>\n              {\n                tieBreakWon\n                ? <>\n                  {\n                    tieBreakWinner\n                    ?\n                      <>\n                        <p>Congratulations you have won the tie break, please\n                          press continue.\n                        </p>\n                        <button onClick={endTieBreak}>Continue</button>\n                      </>\n                    :\n                      <p>Sorry the other player has won the tie breaker, waiting for them to press continue.</p>\n                  }\n                  </>\n                : <>\n                    <p>Tie Breaker</p>\n                    {\n                      tieFirstPlayer\n                      ? <p>Pick a card, ace is high, low takes!</p>\n                      : <p>Waiting for other players to pick card.</p>\n                    }\n                    {\n                      included\n                      ?\n                        <div>\n                          <img className={imageBackClass} src={cardBack} onClick={() => pickTieBreak(tieFirstPlayer)}></img>\n                        </div>\n                      : null\n                    }\n\n\n                  </>\n              }\n              {\n                chosenCard\n                ?\n                <>\n                  <p>You have picked</p>\n                  <CardImage\n                    id={chosenCard}\n                    card={chosenCard}\n                  />\n                </>\n                : null\n              }\n            </>\n      }\n    </>\n  );\n\n}\n\nexport default Table;\n","/home/chris/Documents/react/knockoutwhistreact/src/components/Tricks.js",["99"],"//Shows the winnings\nimport cardBack from \"../assets/cards/playing-card-back.jpg\";\n\n\nconst Tricks = (props) => {\n  console.log(props);\n  return (\n    <div>\n      <p>Round {props.roundNumber}</p>\n      <p>winnings</p>\n      <div className=\"flex-container\">\n        {\n          props.completedTricks.map((trick, i) => (\n              trick.winner.player === props.userId\n              ?\n                <div key={i} className=\"card-back\">\n                  <img className=\"card-back\" src={cardBack}></img>\n                </div>\n              : null\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Tricks;\n","/home/chris/Documents/react/knockoutwhistreact/src/components/PlayerBox.js",[],"/home/chris/Documents/react/knockoutwhistreact/src/components/RoundResults.js",[],"/home/chris/Documents/react/knockoutwhistreact/src/components/GameOver.js",[],"/home/chris/Documents/react/knockoutwhistreact/src/services/suithelper.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":13},{"ruleId":"104","severity":1,"message":"109","line":336,"column":9,"nodeType":"106","messageId":"107","endLine":336,"endColumn":20},{"ruleId":"104","severity":1,"message":"110","line":15,"column":10,"nodeType":"106","messageId":"107","endLine":15,"endColumn":17},{"ruleId":"104","severity":1,"message":"111","line":15,"column":18,"nodeType":"106","messageId":"107","endLine":15,"endColumn":28},{"ruleId":"104","severity":1,"message":"112","line":16,"column":10,"nodeType":"106","messageId":"107","endLine":16,"endColumn":12},{"ruleId":"104","severity":1,"message":"113","line":16,"column":13,"nodeType":"106","messageId":"107","endLine":16,"endColumn":18},{"ruleId":"104","severity":1,"message":"114","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":14},{"ruleId":"104","severity":1,"message":"115","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":13},{"ruleId":"104","severity":1,"message":"116","line":14,"column":7,"nodeType":"106","messageId":"107","endLine":14,"endColumn":21},{"ruleId":"117","severity":1,"message":"118","line":7,"column":5,"nodeType":"119","messageId":"120","endLine":16,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":22,"column":3,"nodeType":"119","messageId":"120","endLine":31,"endColumn":4},{"ruleId":"104","severity":1,"message":"121","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":12},{"ruleId":"117","severity":1,"message":"118","line":64,"column":5,"nodeType":"119","messageId":"120","endLine":177,"endColumn":6},{"ruleId":"122","severity":1,"message":"123","line":138,"column":27,"nodeType":"124","endLine":138,"endColumn":119},{"ruleId":"122","severity":1,"message":"123","line":17,"column":19,"nodeType":"124","endLine":17,"endColumn":61},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Users' is defined but never used.","'sendMessage' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'pm' is assigned a value but never used.","'setPm' is assigned a value but never used.","'images' is defined but never used.","'image' is defined but never used.","'getCardPicture' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'sock' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]